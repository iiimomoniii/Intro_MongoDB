ตัวอย่าง ต้องการเรียงลำดับเงินเดือนพนักงานจากน้อยไปมาก
# Command
db.<collection-name>.aggregate([{$project:{<field-show>:<value-show>,...}},{$sort:{<field-sort>:1}}])
# Ex
db.employees.aggregate([{$project:{_id:0,name:1,salary:1}},{$sort:{salary:1}}])
# Result
{
  name: 'สกาวใจ',
  salary: 15000
},
{
  name: 'สุดารัตน์',
  salary: 15000
},
{
  name: 'สมหมาย',
  salary: 15000
},
{
  name: 'มะลิ',
  salary: 18000
},
{
  name: 'ณัฐกานต์',
  salary: 30000
},
{
  name: 'สมชาย',
  salary: 40000
},
{
  name: 'คมกริช',
  salary: 40000
},
{
  name: 'จักรเพชร',
  salary: 40000
},
{
  name: 'แจ๋ม',
  salary: 40000
},
{
  name: 'ญัฐวุติ',
  salary: 45000
},
{
  name: 'เกษตรสันต์',
  salary: 45000
},
{
  name: 'สมพร',
  salary: 45000
},
{
  name: 'ก้อง',
  salary: 60000
},
{
  name: 'วุฒิชัย',
  salary: 60000
},
{
  name: 'รุ่งนภา',
  salary: 75000
}
----------------------------------------
ตัวอย่าง ต้องการเรียงลำดับเงินเดือนพนักงานจากมากไปน้อย
# Command
db.<collection-name>.aggregate([{$project:{<field-show>:<value-show>,...}},{$sort:{<field-sort>:-1}}])
# Ex
db.employees.aggregate([{$project:{_id:0,name:1,salary:1}},{$sort:{salary:-1}}])
# Result
{
  name: 'รุ่งนภา',
  salary: 75000
}
{
  name: 'ก้อง',
  salary: 60000
}
{
  name: 'วุฒิชัย',
  salary: 60000
}
{
  name: 'ญัฐวุติ',
  salary: 45000
}
{
  name: 'เกษตรสันต์',
  salary: 45000
}
{
  name: 'สมพร',
  salary: 45000
}
{
  name: 'สมชาย',
  salary: 40000
}
{
  name: 'คมกริช',
  salary: 40000
}
{
  name: 'จักรเพชร',
  salary: 40000
}
{
  name: 'แจ๋ม',
  salary: 40000
}
{
  name: 'ณัฐกานต์',
  salary: 30000
}
{
  name: 'มะลิ',
  salary: 18000
}
{
  name: 'สกาวใจ',
  salary: 15000
}
{
  name: 'สุดารัตน์',
  salary: 15000
}
{
  name: 'สมหมาย',
  salary: 15000
}
----------------------------------------
ตัวอย่าง ต้องการเรียงลำดับชื่อพนักงานจาก ก-ฮ (พยัญชนะ-สระ)
# Command
db.<collection-name>.aggregate([{$project:{<field-show>:<value-show>,...}},{$sort:{<field-sort>:1}}])
# Ex
db.employees.aggregate([{$project:{_id:0,name:1}},{$sort:{name:1}}])
# Result
{
  name: 'ก้อง'
}
{
  name: 'คมกริช'
}
{
  name: 'จักรเพชร'
}
{
  name: 'ญัฐวุติ'
}
{
  name: 'ณัฐกานต์'
}
{
  name: 'มะลิ'
}
{
  name: 'รุ่งนภา'
}
{
  name: 'วุฒิชัย'
}
{
  name: 'สกาวใจ'
}
{
  name: 'สมชาย'
}
{
  name: 'สมพร'
}
{
  name: 'สมหมาย'
}
{
  name: 'สุดารัตน์'
}
{
  name: 'เกษตรสันต์'
}
{
  name: 'แจ๋ม'
}
----------------------------------------
ตัวอย่าง ต้องการเรียงลำดับชื่อพนักงานจาก ฮ-ก (สระ-พยัญชนะ)
# Command
db.<collection-name>.aggregate([{$project:{<field-show>:<value-show>,...}},{$sort:{<field-sort>:-1}}])
# Ex
db.employees.aggregate([{$project:{_id:0,name:1}},{$sort:{name:-1}}])
# Result
{
  name: 'แจ๋ม'
}
{
  name: 'เกษตรสันต์'
}
{
  name: 'สุดารัตน์'
}
{
  name: 'สมหมาย'
}
{
  name: 'สมพร'
}
{
  name: 'สมชาย'
}
{
  name: 'สกาวใจ'
}
{
  name: 'วุฒิชัย'
}
{
  name: 'รุ่งนภา'
}
{
  name: 'มะลิ'
}
{
  name: 'ณัฐกานต์'
}
{
  name: 'ญัฐวุติ'
}
{
  name: 'จักรเพชร'
}
{
  name: 'คมกริช'
}
{
  name: 'ก้อง'
}
----------------------------------------
ตัวอย่าง ต้องการเรียงลำดับที่อยู่ของพนักงาน
# Command
db.<collection-name>.aggregate([{$project:{<field-show>:<field-value>}},{$sort:{<field-sort>:1}}])
# Ex
db.employees.aggregate([{$project:{_id:0,name:1,address:1}},{$sort:{address:1}}])
# Result
{
  name: 'มะลิ',
  address: 'กระบี่'
}
{
  name: 'รุ่งนภา',
  address: 'กระบี่'
}
{
  name: 'ก้อง',
  address: 'กรุงเทพมหานคร'
}
{
  name: 'สกาวใจ',
  address: 'กรุงเทพมหานคร'
}
{
  name: 'ญัฐวุติ',
  address: 'กรุงเทพมหานคร'
}
{
  name: 'สมหมาย',
  address: 'กรุงเทพมหานคร'
}
{
  name: 'วุฒิชัย',
  address: 'กรุงเทพมหานคร'
}
{
  name: 'สมชาย',
  address: 'ชลบุรี'
}
{
  name: 'ณัฐกานต์',
  address: 'ชลบุรี'
}
{
  name: 'จักรเพชร',
  address: 'ชลบุรี'
}
{
  name: 'สุดารัตน์',
  address: 'ระยอง'
}
{
  name: 'คมกริช',
  address: 'ระยอง'
}
{
  name: 'แจ๋ม',
  address: 'ลพบุรี'
}
{
  name: 'เกษตรสันต์',
  address: 'เชียงใหม่'
}
{
  name: 'สมพร',
  address: 'เชียงใหม่'
}
----------------------------------------